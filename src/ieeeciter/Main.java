/*
 * Copyright (C) 2014 Yu Cheng Gu (Frank)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ieeeciter;

import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author Frank
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
    boolean authorFlag = false; //Whether there are more than 3 authors
    
    boolean[] fDirty = new boolean[15];
    public Main() {
        initComponents();
        result.setContentType("text/HTML");
        result.setEditorKit(new HTMLEditorKit());
        setBook();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        Clear = new javax.swing.JButton();
        f1 = new javax.swing.JTextField();
        f2 = new javax.swing.JTextField();
        f3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        f4 = new javax.swing.JTextField();
        f5 = new javax.swing.JTextField();
        f6 = new javax.swing.JTextField();
        f7 = new javax.swing.JTextField();
        f8 = new javax.swing.JTextField();
        c1 = new javax.swing.JCheckBox();
        f9 = new javax.swing.JTextField();
        f10 = new javax.swing.JTextField();
        f11 = new javax.swing.JTextField();
        f12 = new javax.swing.JTextField();
        Generate = new javax.swing.JButton();
        f13 = new javax.swing.JTextField();
        f14 = new javax.swing.JTextField();
        f15 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JEditorPane();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book", "Handbook", "Report", "Conference", "FTP", "WWW", "E-mail", "Telnet", "Patent", "Standard", "Thesis", "Dissertation", "Unpublished", "Unpublished (Private Communication)", "Periodical" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        f1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f1FocusGained(evt);
            }
        });
        f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                f1MouseReleased(evt);
            }
        });
        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });

        f2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f2FocusGained(evt);
            }
        });

        f3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f3FocusGained(evt);
            }
        });

        jLabel1.setText("Type: ");

        f4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f4FocusGained(evt);
            }
        });

        f5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f5FocusGained(evt);
            }
        });

        f6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                f6FocusLost(evt);
            }
        });

        f7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f7FocusGained(evt);
            }
        });

        f8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f8FocusGained(evt);
            }
        });

        c1.setText("et al.");
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        f9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f9FocusGained(evt);
            }
        });

        f10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f10FocusGained(evt);
            }
        });

        f11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f11FocusGained(evt);
            }
        });

        f12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f12FocusGained(evt);
            }
        });

        Generate.setText("Generate!");
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });

        f13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f13FocusGained(evt);
            }
        });

        f14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f14FocusGained(evt);
            }
        });

        f15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                f15FocusGained(evt);
            }
        });

        jScrollPane1.setViewportView(result);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("IEEE Citation Generator");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(f3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(f13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(f14, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(f15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Generate, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(f5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(f6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(f10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(f11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(f7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(f8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(f12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(f9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(Generate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        if( c1.isSelected())
        {
            authorFlag = true;
        }
        if(jComboBox1.getSelectedIndex()!=1)
        {
            if(c1.isSelected())
                {
                    f3.setEnabled(false);
                }
                else
                {
                    f3.setEnabled(true);
                }
        }
    }//GEN-LAST:event_c1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        setFields();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void setFields()
    {
        switch(jComboBox1.getSelectedIndex())
        {
            case 0:
                setBook();
                break;
            case 1:
                setHandbook();
                break;
            case 2: 
                setReport();
                break;
            case 3:
                setConference();
                break;
            case 4:
                setFTP();
                break;
            case 5:
                setWWW();
                break;
            case 6: 
                setEmail();
                break;
            case 7:
                setTelnet();
                break;
            case 8:
                setPatent();
                break;
            case 9:
                setStandard();
                break;
            case 10:
                setThesis();
                break;
            case 11:
                setThesis();
                break;
            case 12:
                setUnpublished(true);
                break;
            case 13:
                setUnpublished(false);
                break;
            case 14:
                setPeriodical();
                break;
        }
    }
    
    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        authorFlag = false;
        
        f1.setText("");
        f2.setText(""); 
        f3.setText(""); 
        f4.setText(""); 
        f5.setText(""); 
        f6.setText(""); 
        f7.setText(""); 
        f8.setText(""); 
        f9.setText(""); 
        f10.setText(""); 
        f11.setText(""); 
        f12.setText(""); 
        f13.setText(""); 
        f14.setText(""); 
        f15.setText(""); 
        
        setFields();
        c1.setSelected(false);
        
        result.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed

    }//GEN-LAST:event_f1ActionPerformed

    private void f1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f1MouseReleased
// TODO add your handling code here:
    }//GEN-LAST:event_f1MouseReleased

    private void f1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f1FocusGained
        f1.setText(""); // TODO add your handling code here:
    }//GEN-LAST:event_f1FocusGained

    private void f2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f2FocusGained
        f2.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f2FocusGained

    private void f3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f3FocusGained
        f3.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f3FocusGained

    private void f4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f4FocusGained
        f4.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f4FocusGained

    private void f5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f5FocusGained
        f5.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f5FocusGained

    private void f6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f6FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_f6FocusLost

    private void f6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f6FocusGained
        f6.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f6FocusGained

    private void f7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f7FocusGained
        f7.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f7FocusGained

    private void f8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f8FocusGained
        f8.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f8FocusGained

    private void f9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f9FocusGained
        f9.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f9FocusGained

    private void f10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f10FocusGained
        f10.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f10FocusGained

    private void f11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f11FocusGained
        f11.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f11FocusGained

    private void f12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f12FocusGained
        f12.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f12FocusGained

    private void f13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f13FocusGained
        f13.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f13FocusGained

    private void f14FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f14FocusGained
        f14.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f14FocusGained

    private void f15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_f15FocusGained
        f15.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_f15FocusGained

    //Incomplete!
    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        int temp = 0;
        int tempb = 0;
        int tempc = 0;
        try
        {
            switch(jComboBox1.getSelectedIndex())
            {
                case 0:
                    if(f10.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f10.getText());
                    }
                    if(f11.getText().equals(""))
                    {
                        tempb = -1;
                    }
                    else
                    {
                        tempb = Integer.parseInt(f11.getText());
                    }
                    if(f12.getText().equals(""))
                    {
                        tempc = -1;
                    }
                    else
                    {
                        tempc = Integer.parseInt(f12.getText());
                    }
                    Book t = new Book(Integer.parseInt(f1.getText()),f4.getText(),f5.getText(),
                    f6.getText(),f7.getText(),f8.getText(), f9.getText(),
                    temp,tempb,
                    tempc,f13.getText());
                    t.setAuthorFlag(c1.isSelected());
                    t.AddAuthors(f2.getText());
                    t.AddAuthors(f3.getText());
                    result.setText(t.toString());
                    break;
                    
                case 1:
                    if(f7.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f7.getText());
                    }
                    Handbook h = new Handbook(Integer.parseInt(f1.getText()),f2.getText(),
                    f3.getText(),f4.getText(),f5.getText(),f6.getText(),
                            temp,f8.getText());
                    result.setText(h.toString());
                    break;
                    
                case 2:
                    if(f9.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f9.getText());
                    }
                    Report r = new Report(Integer.parseInt(f1.getText()),f4.getText(),
                    f5.getText(),f6.getText(),f7.getText(),f8.getText(), 
                            temp);
                    r.setAuthorFlag(c1.isSelected());
                    r.AddAuthors(f2.getText());
                    r.AddAuthors(f3.getText());
                    result.setText(r.toString());
                    break;
                    
                case 3:
                    if(f8.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f8.getText());
                    }
                    confTechArt c = new confTechArt(Integer.parseInt(f1.getText()),f4.getText(),
                    f5.getText(),f6.getText(),f7.getText(),temp, 
                            f9.getText());
                    c.setAuthorFlag(c1.isSelected());
                    c.AddAuthors(f2.getText());
                    c.AddAuthors(f3.getText());
                    result.setText(c.toString());
                    break;
                
                case 4:
                    if(f9.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f9.getText());
                    }
                    ftpSource f = new ftpSource(Integer.parseInt(f1.getText()),
                            temp,f4.getText(),
                            f5.getText(), f6.getText(), f7.getText(), f8.getText());
                    f.setAuthorFlag(c1.isSelected());
                    f.AddAuthors(f2.getText());
                    f.AddAuthors(f3.getText());
                    result.setText(f.toString());
                    break;
                
                case 5:
                    if(f8.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f8.getText());
                    }
                    if(f6.getText().equals(""))
                    {
                        tempb = -1;
                    }
                    else
                    {
                        tempb = Integer.parseInt(f6.getText());
                    }
                    siteSource s = new siteSource(Integer.parseInt(f1.getText()),
                            tempb,f7.getText(),temp,
                            f4.getText(), f5.getText());
                    s.AddAuthors(f2.getText());
                    s.AddAuthors(f3.getText());
                    s.setAuthorFlag(c1.isSelected());
                    result.setText(s.toString());
                    break;
                
                case 6:
                    if(f9.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f9.getText());
                    }
                    emailSource e = new emailSource(Integer.parseInt(f1.getText()),
                            Integer.parseInt(f7.getText()),f8.getText(),
                            temp,
                            f4.getText(), f5.getText(),f6.getText());
                    e.AddAuthors(f2.getText());
                    e.AddAuthors(f3.getText());
                    e.setAuthorFlag(c1.isSelected());
                    result.setText(e.toString());
                    break;
                
                case 7:
                    if(f8.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f8.getText());
                    }
                    if(f10.getText().equals(""))
                    {
                        tempb = -1;
                    }
                    else
                    {
                        tempb = Integer.parseInt(f10.getText());
                    }
                    telnetSource tel = new telnetSource(Integer.parseInt(f1.getText()),
                            temp,f9.getText(),
                            tempb,
                            f4.getText(), f5.getText(),f6.getText(),f7.getText());
                    tel.AddAuthors(f2.getText());
                    tel.AddAuthors(f3.getText());
                    tel.setAuthorFlag(c1.isSelected());
                    result.setText(tel.toString());
                    break;
                    
                case 8:
                    if(f7.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f7.getText());
                    }
                    if(f8.getText().equals(""))
                    {
                        tempb = -1;
                    }
                    else
                    {
                        tempb = Integer.parseInt(f8.getText());
                    }
                    Patent p = new Patent(Integer.parseInt(f1.getText()), 
                            f4.getText(), f5.getText(), f6.getText(), temp, tempb);
                    p.AddAuthors(f2.getText());
                    p.AddAuthors(f3.getText());
                    p.setAuthorFlag(c1.isSelected());
                    result.setText(p.toString());
                    break;
                
                case 9:
                    if(f4.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f4.getText());
                    }
                    Standard std = new Standard(Integer.parseInt(f1.getText()),
                    f2.getText(),f3.getText(),temp);
                    result.setText(std.toString());
                    break;
                
                case 10:
                    if(f9.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f9.getText());
                    }
                    Theses ths = new Theses(Integer.parseInt(f1.getText()), f4.getText(),
                    f5.getText(),f6.getText(),f7.getText(),f8.getText(),temp,true);
                    ths.AddAuthors(f2.getText());
                    ths.AddAuthors(f3.getText());
                    ths.setAuthorFlag(c1.isSelected());
                    result.setText(ths.toString());
                    break;
                
                case 11:
                    if(f9.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f9.getText());
                    }
                    Theses thsb = new Theses(Integer.parseInt(f1.getText()), f4.getText(),
                    f5.getText(),f6.getText(),f7.getText(),f8.getText(),temp,false);
                    thsb.AddAuthors(f2.getText());
                    thsb.AddAuthors(f3.getText());
                    thsb.setAuthorFlag(c1.isSelected());
                    result.setText(thsb.toString());
                    break;
                
                case 12:
                    Unpublished ups = new Unpublished(Integer.parseInt(f1.getText()), 
                    f4.getText());
                    ups.AddAuthors(f2.getText());
                    ups.AddAuthors(f3.getText());
                    ups.setAuthorFlag(c1.isSelected());
                    result.setText(ups.toString());
                    break;
                
                case 13:
                    if(f5.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f5.getText());
                    }
                    Unpublished upsb = new Unpublished(Integer.parseInt(f1.getText()), 
                    f4.getText(),temp);
                    upsb.AddAuthors(f2.getText());
                    upsb.AddAuthors(f3.getText());
                    upsb.setAuthorFlag(c1.isSelected());
                    result.setText(upsb.toString());
                    break;
                    
                case 14:
                    if(f6.getText().equals(""))
                    {
                        temp = -1;
                    }
                    else
                    {
                        temp = Integer.parseInt(f6.getText());
                    }
                    if(f7.getText().equals(""))
                    {
                        tempb = -1;
                    }
                    else
                    {
                        tempb = Integer.parseInt(f7.getText());
                    }
                    if(f10.getText().equals(""))
                    {
                        tempc = -1;
                    }
                    else
                    {
                        tempc = Integer.parseInt(f10.getText());
                    }
                    Periodical prd = new Periodical(Integer.parseInt(f1.getText()),f4.getText(),
                    f5.getText(),temp, tempb,f8.getText(),f9.getText(),tempc);
                    prd.AddAuthors(f2.getText());
                    prd.AddAuthors(f3.getText());
                    prd.setAuthorFlag(c1.isSelected());
                    result.setText(prd.toString());
            }
        }
        catch(Exception e)
        {
            result.setText("Input format error! Please check your inputs!");
        }
    }//GEN-LAST:event_GenerateActionPerformed
    
    public void setBook()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Author 1");
        f2.setEnabled(true);
        f3.setText("Author 2");
        f3.setEnabled(true);
        f4.setText("Title of chapter");
        f4.setEnabled(true);
        f5.setText("Title of book");
        f5.setEnabled(true);
        f6.setText("Edition of book");
        f6.setEnabled(true);
        f7.setText("City of publisher");
        f7.setEnabled(true);
        f8.setText("Country of publication");
        f8.setEnabled(true);
        f9.setText("Publisher");
        f9.setEnabled(true);
        f10.setText("Year published");
        f10.setEnabled(true);
        f11.setText("Chapter");
        f11.setEnabled(true);
        f12.setText("Section");
        f12.setEnabled(true);
        f13.setText("Page");
        f13.setEnabled(true);
        
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setHandbook()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(false);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Name of handbook");
        f2.setEnabled(true);
        f3.setText("Edition");
        f3.setEnabled(true);
        f4.setText("Company");
        f4.setEnabled(true);
        f5.setText("City of company");
        f5.setEnabled(true);
        f6.setText("State");
        f6.setEnabled(true);
        f7.setText("Year published");
        f7.setEnabled(true);
        f8.setText("Page");
        f8.setEnabled(true);
        
        f9.setText("");
        f9.setEnabled(false);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setReport()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Author 1");
        f2.setEnabled(true);
        f3.setText("Author 2");
        f3.setEnabled(true);
        f4.setText("Title");
        f4.setEnabled(true);
        f5.setText("Company");
        f5.setEnabled(true);
        f6.setText("City of company");
        f6.setEnabled(true);
        f7.setText("State");
        f7.setEnabled(true);
        f8.setText("Report Number");
        f8.setEnabled(true);
        f9.setText("Year Published");
        f9.setEnabled(true);
        
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setConference()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Author 1");
        f2.setEnabled(true);
        f3.setText("Author 2");
        f3.setEnabled(true);
        f4.setText("Title of paper");
        f4.setEnabled(true);
        f5.setText("Name of conf.");
        f5.setEnabled(true);
        f6.setText("City");
        f6.setEnabled(true);
        f7.setText("State");
        f7.setEnabled(true);
        f8.setText("Year");
        f8.setEnabled(true);
        f9.setText("Page");
        f9.setEnabled(true);
        
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setFTP()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Author 1");
        f2.setEnabled(true);
        f3.setText("Author 2");
        f3.setEnabled(true);
        f4.setText("Title");
        f4.setEnabled(true);
        f5.setText("Edition");
        f5.setEnabled(true);
        f6.setText("FTP site");
        f6.setEnabled(true);
        f7.setText("Directory");
        f7.setEnabled(true);
        f8.setText("File");
        f8.setEnabled(true);
        f9.setText("Year published");
        f9.setEnabled(true);
        
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
     public void setTelnet()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Author 1");
        f2.setEnabled(true);
        f3.setText("Author 2");
        f3.setEnabled(true);
        f4.setText("Title");
        f4.setEnabled(true);
        f5.setText("Telnet site");
        f5.setEnabled(true);
        f6.setText("Directory");
        f6.setEnabled(true);
        f7.setText("File");
        f7.setEnabled(true);
        
        f8.setText("Year");
        f8.setEnabled(false);
        f9.setText("Month");
        f9.setEnabled(false);
        f10.setText("Day");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setWWW()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setText("Title");
        f5.setText("URL");
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        
        f6.setText("Year");
        f6.setEnabled(true);
        f7.setText("Month");
        f7.setEnabled(true);
        f8.setText("Day");
        f8.setEnabled(true);
        f9.setText("");
        f9.setEnabled(false);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setEmail()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setText("Title");
        f5.setText("Email address");
        f6.setText("Message");
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        f6.setEnabled(true);
        
        f7.setText("Year");
        f7.setEnabled(true);
        f8.setText("Month");
        f8.setEnabled(true);
        f9.setText("Day");
        f9.setEnabled(true);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setPatent()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setText("Title");
        f5.setText("Patent number");
        f6.setText("Month");
        f7.setText("Day");
        f8.setText("Year");
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        f6.setEnabled(true);
        f7.setEnabled(true);
        f8.setEnabled(true);
        
        f9.setText("");
        f9.setEnabled(false);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setStandard()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(false);
        c1.setSelected(false);
        f1.setText("Citation number");
        f1.setEnabled(true);
        f2.setText("Title");
        f2.setEnabled(true);
        f3.setText("Standard number");
        f3.setEnabled(true);
        f4.setText("Year Issued");
        f4.setEnabled(true);
        
        f5.setText("");
        f5.setEnabled(false);
        f6.setText("");
        f6.setEnabled(false);
        f7.setText("");
        f7.setEnabled(false);
        f8.setText("");
        f8.setEnabled(false);
        f9.setText("");
        f9.setEnabled(false);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setThesis()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setText("Title");
        f5.setText("Department");
        f6.setText("University");
        f7.setText("City");
        f8.setText("State");
        f9.setText("Year of publication");
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        f6.setEnabled(true);
        f7.setEnabled(true);
        f8.setEnabled(true);
        f9.setEnabled(true);
        
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    public void setUnpublished(boolean flag)
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setEnabled(true);
        f3.setEnabled(true);
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setEnabled(true);
        if(flag)
        {
            f4.setText("Title");
            f5.setEnabled(false);
            f5.setText("");
        }
        else
        {
            f4.setText("Month");
            f5.setEnabled(true);
            f5.setText("Year");
        }
        
        f6.setText("");
        f6.setEnabled(false);
        f7.setText("");
        f7.setEnabled(false);
        f8.setText("");
        f8.setEnabled(false);
        f9.setText("");
        f9.setEnabled(false);
        f10.setText("");
        f10.setEnabled(false);
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
     
    public void setPeriodical()
    {
        for(int i = 0; i < fDirty.length; i++)
        {
            fDirty[i] = false;
        }
        c1.setEnabled(true);
        c1.setSelected(false);
        f1.setText("Citation number");
        f2.setText("Author 1");
        f3.setText("Author 2");
        f4.setText("Name of paper");
        f5.setText("Periodical title");
        f6.setText("Volume");
        f7.setText("Number");
        f8.setText("Page");
        f9.setText("Month");
        f10.setText("Year");
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        f6.setEnabled(true);
        f7.setEnabled(true);
        f8.setEnabled(true);
        f9.setEnabled(true);
        f10.setEnabled(true);
        
        f11.setText("");
        f11.setEnabled(false);
        f12.setText("");
        f12.setEnabled(false);
        f13.setText("");
        f13.setEnabled(false);
        f14.setText("");
        f14.setEnabled(false);
        f15.setText("");
        f15.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton Generate;
    private javax.swing.JCheckBox c1;
    private javax.swing.JTextField f1;
    private javax.swing.JTextField f10;
    private javax.swing.JTextField f11;
    private javax.swing.JTextField f12;
    private javax.swing.JTextField f13;
    private javax.swing.JTextField f14;
    private javax.swing.JTextField f15;
    private javax.swing.JTextField f2;
    private javax.swing.JTextField f3;
    private javax.swing.JTextField f4;
    private javax.swing.JTextField f5;
    private javax.swing.JTextField f6;
    private javax.swing.JTextField f7;
    private javax.swing.JTextField f8;
    private javax.swing.JTextField f9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane result;
    // End of variables declaration//GEN-END:variables
}
